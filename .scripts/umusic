#!/usr/bin/env python

import sys
import os
import urllib
import json
import termios
import subprocess
import atexit

#(playlist, v['title']['$t'], v['media$group']['yt$videoid']['$t'])

listout = False

vids = []

playlists = []

pwd = os.path.realpath(__file__)

def cleanup():
     global vid
     timeout_sec = 5
     p_sec = 0
     for second in range(timeout_sec):
         if p.poll() == None:
             time.sleep(1)
             p_sec += 1
     if p_sec >= timeout_sec:
         p.kill()

def play_vid(vidid):
    global vid
    vid = vidid
    vid = get_vid(vid)
    if isinstance(vid, tuple):
        playlist = vid[0]
        vid = vid[1]
        if playlist not in playlists:
            print
            print "PLAYLIST: %s " % playlist
            playlists.append(playlist)
    print "    playing '%s' !" % vid['title']['$t']
    try:
        img = vid['media$group']['media$thumbnail'][1]
        #w = open_image(img['url'], img['height'], img['width'])
        #w.show_all()
        stream = subprocess.Popen(['python %s.py %s | avconv -v quiet -i - -ab 192k -vn -acodec libmp3lame -f mp3 - | mpg123 -q -' % (pwd, vid['media$group']['yt$videoid']['$t']) ], shell=True)
        stream.wait()
        #w.destroy()
    except KeyboardInterrupt:
        print "\n\t***SKIPED***\t\n"
        stream.terminate()
        stream.wait()
  
def get_vids(playlist):
    data = json.loads(urllib.urlopen("http://gdata.youtube.com/feeds/api/playlists/%s?v=2&alt=json" % playlist).read())
    vids = [(data['feed']['title']['$t'], v['media$group']['yt$videoid']['$t']) for v in data['feed']['entry']]
    return vids

def get_vid(vid):
    if isinstance(vid, tuple):
        playlist = vid[0]
        vid = vid[1]
    else:
        playlist = False

    data = json.loads(urllib.urlopen("http://gdata.youtube.com/feeds/api/videos/%s?v=2&alt=json" % vid).read())
    vid = data['entry']
    return (playlist, vid) if playlist else vid


#def open_image(url, h, w):
#    window = gtk.Window()
#    window.set_size_request(w, h)
#    webview = webkit.WebView()
#    window.add(webview)
#    webview.load_uri(url)
#    return window


for arg in sys.argv[1:]:
    if arg.startswith("-"):
        listout = True
        continue
    if arg.startswith('PL'):
        for vid in get_vids(arg[2:]):
            vids.append(vid)
        continue
    vids.append(arg)

atexit.register(cleanup)

if listout:
    for vid in vids:
        print vid
else:
    for vid in vids:
        play_vid(vid)
